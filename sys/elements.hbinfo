a{
f=anchor
c=1
d=Together with its href attribute, creates a hyperlink to web pages, files, email addresses, locations within the current page, or anything else a URL can address.
a=href,target,title,download
{
}
}
abbr{
f=abbreviation
c=1
d=An abbreviation or acronym.
a=
{
}
}
address{
f=address
c=1
d=Indicates the enclosed HTML provides contact information for a person or an organization.
a=
{
0,Can only be used to represent the contact information for its nearest <article> or <body> element ancestor.
0,Should not contain more information than the contact information, like a publication date (which belongs in a <time> element)
}
}
area{
f=area
c=0
d=Defines an area inside an image map that has predefined clickable areas.
a=shape,alt,coords,href
{
1,This is only used within a <map>.
}
}
article{
f=article
c=1
d=Represents a self-contained composition in a document, page, application, or site which is intended to be independently ditributable or reusable.
a=
{
0,Should be identified, typically by including a heading element as a child.
}
}
aside{
f=aside
c=1
d=Represents a portion of a document whose content is only indirectly related to the document's main content.
a=
{
0,Frequently presented as sidebars or call-out boxes.
1,Do not use to tag parenthesized text, as this kind of text is considered part of the main flow.
}
}
audio{
f=audio
c=1
d=Used to embed sound content in documents.
a=
{
}
}
b{
f=bold / bring attention
c=1
d=Used to draw attention to the element's content.
a=
{
2,You should use CSS to bold text instead with "font-weight" property.
2,You should use <strong> element for special importance.
}
}
base{
f=base
c=0
d=Specifies the base URL to use for all relative URLs in a document.
a=href,target
{
1,Must have href attribute, target attribute, or both.
1,Must come before other elements with attribute values that are URLs.
1,There can only be one within a document.
}
}
bdi{
f=bidirectional isolate
c=1
d=Tells the browser's bidirectional algorithm to treat the text it contains in isolation from its surrounding text.
a=class
{
}
}
bdo{
f=bidirectional override
c=1
d=Overrides the current directionality of text.
a=dir
{
0,ltr = left to right
0,rtl = right to left
}
}
blockquote{
f=block quotation
c=1
d=Indicates the enclosed text is an extended quotation, often including a URL for the source using the "cite" attribute.
a=cite
{
0,Usually rendered visually by indentation and changed with CSS "margin-left" and/or "margin-right"
}
}
body{
f=body
c=1
d=Represents the content of an HTML document.
a=
{
1,There can only be one within a document.
}
}
br{
f=break line / carriage return
c=0
d=Produces a line break in text.
a=
{
2,Do not use to create margins between paragraphs, wrap them in <p> and use CSS "margin" property.
}
}
cite{
f=citation
c=1
d=Used to markup the title of a cited creative work.
a=
{
0,To include a reference to the source of quoted material which is contained within a <blockquote> or <q> element, use the "cite" attribute on the element.
}
}
code{
f=inline code
c=1
d=Displays its contents styled in a fashion intened to indicate that the text is a short fragment of computer code.
a=
{
0,To represent multiple lines of code, wrap this within a <pre> element.
}
}
data{
f=data
c=1
d=Links a given piece of content with a machine-readable translation.
a=value
{
1,If the content is time or date related use <time>.
}
}
dd{
f=description details
c=1
d=Provides the description, definition, or value for the precedding term <dt> in a description list <dl>
a=
{
}
}
dfn{
f=definition
c=1
d=Used to indicate the term begin defined within the context of a definition phrase or sentence.
a=title,id
{
0,The ancestor <p>, <dt>/<dd> pairing, or the nearest section ancestor of the this is considered to be the definition of the term.
1,If this has "title" attribute it must contain the term being defined and no other text.
}
}
div{
f=division
c=1
d=Generic container for flow content.
a=
{
0,Has no effect on content or layout until styled with CSS.
}
}
dl{
f=description list
c=1
d=Encloses a list of groups of terms <dt> and descriptions <dd>.
a=
{
1,Do not use this to create indentation on a page.
}
}
dt{
f=description term
c=1
d=Specifies a term in a description or definition list.
a=
{
1,Must be used inside <dl>.
0,Multiple <dt> in a row indicate several terms that are all defined by the immediate next <dd>.
}
}
em{
f=emphasis
c=1
d=Marks text that has stress emphasis.
a=
{
1,Should not be used to italicize text, use CSS "font-style" instead.
}
}
figcaption{
f=figure caption
c=1
d=Represents a caption or legend describing the rest of the contents of its parent <figure> element.
a=
{
}
}
figure{
f=figure
c=1
d=Self-contained content.
a=
{
0,Usually an image, illustration, diagram, or code snippet.
0,Use <figcaption> to include a caption.
}
}
footer{
f=footer
c=1
d=Represents a footer for its nearest ancestor sectioning content or sectioning root.
a=
{
0,Typically contains information about the author of the section, copyright data, or links to related documents.
0,Contact info should go inside an <address> tag.
}
}
h1{
f=heading one
c=1
d=Heading Elements <h1> thru <h6> represent six levels of section headings.
a=
{
0,Creates a block-level box in layout, starting on a new line and taking full width available.
1,Do not use to resize text, use CSS "font-size" property instead.
1,Do not skip heading levels: always start from <h1> followed by <h2> etc.
}
}
h2{
f=heading two
c=1
d=Heading Elements <h1> thru <h6> represent six levels of section headings.
a=
{
0,Creates a block-level box in layout, starting on a new line and taking full width available.
1,Do not use to resize text, use CSS "font-size" property instead.
1,Do not skip heading levels: always start from <h1> followed by <h2> etc.
}
}
h3{
f=heading three
c=1
d=Heading Elements <h1> thru <h6> represent six levels of section headings.
a=
{
0,Creates a block-level box in layout, starting on a new line and taking full width available.
1,Do not use to resize text, use CSS "font-size" property instead.
1,Do not skip heading levels: always start from <h1> followed by <h2> etc.
}
}
h4{
f=heading four
c=1
d=Heading Elements <h1> thru <h6> represent six levels of section headings.
a=
{
0,Creates a block-level box in layout, starting on a new line and taking full width available.
1,Do not use to resize text, use CSS "font-size" property instead.
1,Do not skip heading levels: always start from <h1> followed by <h2> etc.
}
}
h5{
f=heading five
c=1
d=Heading Elements <h1> thru <h6> represent six levels of section headings.
a=
{
0,Creates a block-level box in layout, starting on a new line and taking full width available.
1,Do not use to resize text, use CSS "font-size" property instead.
1,Do not skip heading levels: always start from <h1> followed by <h2> etc.
}
}
h6{
f=heading six
c=1
d=Heading Elements <h1> thru <h6> represent six levels of section headings.
a=
{
0,Creates a block-level box in layout, starting on a new line and taking full width available.
1,Do not use to resize text, use CSS "font-size" property instead.
1,Do not skip heading levels: always start from <h1> followed by <h2> etc.
}
}
head{
f=head
c=1
d=Contains machine-readable information (metadata) about the document, like its title, scripts, and stylesheets.
a=
{
0,Primarily holds information for machine processing, not human-readability.
0,For human-visible information, like top-level headings and listed authors, see the <header> element.
}
}
header{
f=header
c=1
d=Represents introductory content, typically a group of introductory or navigational aids.
a=
{
}
}
hgroup{
f=heading group
c=1
d=Heading grouped with any secondary content, such as subheadings, an alternative title, or a tagline.
a=
{
}
}
hr{
f=horizonal rule / thematic break
c=0
d=Thematic break between paragraph-level elements.
a=
{
}
}
html{
f=hypertext markup language
c=1
d=Represents the root (top-level element) of an HTML document.
a=
{
1,All other elements must be descendants of this element.
}
}
i{
f=idiomatic / italicized
c=1
d=Represents text set off from normal text.
a=
{
0,Used for idiomatic text, technical terms, taxonomical designations, etc.
}
}
img{
f=img
c=0
d=Embeds an image into the document.
a=src,alt
{
1,"src" & "alt" are required attributes.
}
}
kbd{
f=keyboard input
c=1
d=Represents a span of inline text denoting textual user input from a keyboard, voice input, or any other text entry device.
a=
{
}
}
li{
f=list item
c=1
d=Represents an item contained within <ol>, <ul>, or <menu>.
a=value
{
}
}
link{
f=link
c=0
d=Specifies relationships between the current document and an external resource.
a=href,rel,type,media,as
{
0,Most commonly used to link to CSS but is also used to establish site icons among other things.
}
}
main{
f=main
c=1
d=Dominant content of the body of a document.
a=
{
0,Doesn't contribute to the document's outline or affect the DOM's concept of the structure of the page.
}
}
map{
f=map
c=1
d=Used with <area> to define an image map.
a=name
{
1,If "id" attribute is used, it must be the same value as "name" attribute.
}
}
mark{
f=mark
c=1
d=Represents text which is marked or highlighted for reference or notation purposes due to the marked passage's relevance in the enclosing context.
a=
{
}
}
menu{
f=menu
c=1
d=A semantic alternative to <ul>.
a=
{
0,This and <ul> both represent an unordered list of items.
1,In earlier versions of HTML, this had an additional use case as a context menu, however this is considered obsolete and not in spec.
}
}
meta{
f=metadata
c=0
d=Represents metadata that cannot be represented by other HTML meta-related elements, like <base>, <link>, <script>, <style>, and <title>.
a=name,charset,http-equiv,itemprop
{
}
}
nav{
f=nav
c=1
d=A section of a page whose purpose is to provide navigation links, either within the current document or to other documents.
a=
{
}
}
ol{
f=ordered list
c=1
d=Represents an ordered list of items.
a=type,start,reversed,id,class
{
0,Typically rendered as a numbered list.
}
}
p{
f=paragraph
c=1
d=A block-level element that represents a paragraph.
a=
{
1,Will automatically close if another block-level element is parsed before the closing tag.
}
}
pre{
f=preformatted text
c=1
d=Contains text that is presented exactly as written in HTML file.
a=
{
1,Whitespace inside this element is displayed as written.
1,If you have to display reserved characters ( <,>,&," ) they must be escaped using their respective HTML entity.
}
}
q{
f=inline quotation
c=1
d=Indicates that the enclosed text is a short inline quotation.
a=cite
{
1,For long quotations use <blockquote>.
}
}
rp{
f=ruby fallback parenthesis
c=1
d=Used to provide fall-back parentheses for browsers that do not support the display of ruby annotations using <ruby>.
a=
{
1,One <rp> should enclose each of the opening and closing parentheses that wrap the <rt>.
}
}
rt{
f=ruby text
c=1
d=Specifies the ruby text component of a ruby annotation.
a=
{
1,Must always be contained within <ruby>.
}
}
ruby{
f=ruby annotation
c=1
d=Represents small annotations that are rendered above, below, or next to base text.
a=
{
0,Usually used for showing the pronunciation of East Asian characters.
}
}
s{
f=strikethrough
c=1
d=Renders text with a strikethrough, or a line through it.
a=
{
0,For document edits use <del> and <ins>.
}
}
samp{
f=sample output
c=1
d=Used to enclose inline text which represents sample (or quoted) output from a computer program.
a=
{
1,If you need an element which will serve as a container for output generated by JavaScript you should use <output>.
}
}
search{
f=search
c=1
d=Contains a set of form controls or other content related to performing a search or filtering operation.
a=
{
}
}
section{
f=section
c=1
d=Generic standalone section of a document which doesn't have a more specific semantic element to represent it.
a=
{
1,Should always have a heading, with very few exceptions.
}
}
small{
f=small print / side comment
c=1
d=epresents side-comments and small print, like copyright and legal text, independent of its styled presentation.
a=
{
}
}
span{
f=content span
c=1
d=A generic inline container for phrasing content, which does not inherently represent anything.
a=
{
0,This is an inline-level element not a block-level element.
}
}
strong{
f=strong importance
c=1
d=Indicates that its contents have strong importance, seriousness, or urgency.
a=
{
}
}
style{
f=style
c=1
d=Contains style information (CSS) for a document or part of a document.
a=
{
}
}
sub{
f=subscript
c=1
d=Specifies inline text which should be displayed as subscript for solely typographical reasons.
a=
{
}
}
sup{
f=superscript
c=1
d=Specifies inline text which is to be displayed as superscript for solely typographical reasons.
a=
{
}
}
time{
f=time / date
c=1
d=Represents a specific period in time.
a=datetime
{
0,"datetime" attribute is machine-readable.
}
}
title{
f=title
c=1
d=Defines the document's title that is shown in a browser's title bar or a page's tab.
a=
{
0,Only contains text; tags will be ignored.
}
}
track{
f=track
c=0
d=Used as a child of media elements <audio> & <video> that lets you specify timed text tracts or time-based data.
a=default,kind,label,src,srclang
{
1,A media element cannot have more than one <track> with the same "kind", "srclang", and "label".
}
}
u{
f=unarticulated annotation / underline
c=1
d=Represents a span of inline text which should be rendered in a way that indicates that it has a non-textual annotation.
a=
{
2,Do not use to underline text, instead use CSS "text-decoration".
}
}
ul{
f=unordered list
c=1
d=Represents an unordered list of items, typically rendered as a bulleted list.
a=type,id,class,style,title
{
}
}
var{
f=variable
c=1
d=Represents the name of a variable in a mathematical expression or a programming context.
a=
{
1,Do not use for italicizing, instead use CSS "font-style".
}
}
video{
f=video
c=1
d=Embeds a media player which supports video playback into the document.
a=autoplay,controls,loop,src
{
}
}
wbr{
f=line break opportunity / word
c=0
d=Represents a word break opportunity - a position within text where the browser may optionally break a line, though its line-breaking rules would not otherwise create a break at that location.
a=
{
}
}
